
# ▐████▌       ▌   ████▌   ████▌  ▐    ▌  ▐████   ▐████    ████   ▐████▌  ▐████▌
# █    █       █       █       █  █    █  █       █            █  █    █  █    █
# █    █       █       █       █  █    █  █       █            █  █    █  █    █
# ▐    ▌       ▌  ▐████▌   ████▌  ▐████▌  ▐████   ▐████        ▌  ▐████▌  ▐████▌
# █    █       █  █            █       █       █  █    █       █  █    █       █
# █    █       █  █            █       █       █  █    █       █  █    █       █
# ▐████▌       ▌  ▐████▌   ████▌       ▌   ████▌   ████▌       ▌  ▐████▌   ████▌

# ▐████▌       █  ▐████▌  ▐████▌  █    █  ▐████▌  ▐████▌  ▐████▌  ▐████▌  ▐████▌ 
# █    █       █       █       █  █    █  █       █            █  █    █  █    █
# █    █       █       █       █  █    █  █       █            █  █    █  █    █
# █    █       █  ▐████▌  ▐████▌  ▐████▌  ▐████▌  ▐████▌       █  ▐████▌  ▐████▌
# █    █       █  █            █       █       █  █    █       █  █    █       █
# █    █       █  █            █       █       █  █    █       █  █    █       █
# ▐████▌       █  ▐████▌  ▐████▌       █  ▐████▌  ▐████▌       █  ▐████▌  ▐████▌

# ██████       █  ██████  ██████  █    █  ██████  ██████  ██████  ██████  ██████
# █    █       █       █       █  █    █  █       █            █  █    █  █    █
# █    █       █       █       █  █    █  █       █            █  █    █  █    █
# █    █       █  ██████  ██████  ██████  ██████  ██████       █  ██████  ██████
# █    █       █  █            █       █       █  █    █       █  █    █       █
# █    █       █  █            █       █       █  █    █       █  █    █       █
# ██████       █  ██████  ██████       █  ██████  ██████       █  ██████  ██████
# [264,376233,376233,32777,629433,629433,33288]


# [0:' ████ ',1:'█    █',2:'     █',3:'█     ']
#        0 1 2 3 4 5 6 7 8 9
# L[0] = 0,2,0,0,1,0,0,0,0,0 = 
#   ' ████ '[0] = 0,2,3,5,6,7,8,9
#   '     █'[2] = 1
#   '█    █'[1] = 4
# L[1] = 1,2,2,2,1,3,3,2,1,1 = 
#   '█    █'[1] = 0,4,8,9
#   '     █'[2] = 1,2,3,7
#   '█     '[3] = 5,6
# L[2] = ^
# L[3] = 1,2,0,0,0,0,0,2,0,0 = 
#   '█    █'[1] = 0
#   '     █'[2] = 1,7
#   ' ████ '[0] = 2,3,4,5,6,8,9
# L[4] = 1,2,3,2,2,2,1,2,1,1 = 
#   '█    █'[1] = 0,6,8,9
#   '     █'[2] = 1,3,4,5,7
#   '█     '[3] = 2
# L[5] ^
# L[6] = 0,2,0,0,2,0,0,2,0,0 = 
#   ' ████ '[0] = 0,2,3,5,6,8,9
#   '     █'[2] = 1,4,7


def pack(indexes, bits=2):
    """ 
    Takes a list on indexes and packs them into a single number using.
    """
    out = 0
    for i in range(len(indexes)):
        out += indexes[i] << (i*bits)
    
    return out


print(hex(pack([264,376233,376233,32777,629433,629433,33288],23)))
print(hex(pack([264,376233,32777,629433,33288],23)))